color = st_stats$abv_mean, colors = "Reds", hoverinfo = "text",
text = paste0(
"State : ", st_stats$State, "<br />",
"Population = ", format(st_stats$Pop2019, big.mark = ","), "<br />",
"Brewries Count : ", st_stats$BrewriesCount, "<br />",
"Mean ABV : ", sprintf("%.2f %%",100*st_stats$abv_mean), "<br />",
"Mean IBU : ", round(st_stats$ibu_mean,2))) %>%
layout(title = "Mean Statistics by State (Marker Size = IBU, Color = ABV)",
legend(x = sprintf("%.2f %%",100*x)),
geo = g2)
ggplot(BeersData, mapping = aes(x = BeersData$ABV, y = BeersData$IBU)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = "Relationship between Alcohol Content & Bitterness", x = "Alcohol Content", y = "Bitterness") +
scale_x_continuous(labels = scales::percent_format(accurac = 1))
View(BeersData)
View(BeersData)
IPAs <- BeersData %>% filter(BeersData$Style = "India Pale Ale")
IPAs <- BeersData %>% filter(BeersData$Style == "India Pale Ale")
library(dplyr)
library(class)
library(jsonlite)
library(ggplot2)
library(plotly)
library(ggthemes)
library(tidyverse)
library(e1071)
BeerFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/Beers.txt",
strip.white = TRUE,
header = TRUE)
BrewriesFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/Brewries.txt",
strip.white = TRUE,
header = TRUE)
StatesFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/states_lat_long.csv",
strip.white = TRUE,
header = TRUE)
BudRed = rgb(200,16,46, 200, max = 255)
BudWhite = rgb(255,255,255, max = 255)
BudBlue = rgb(19,41,75, max = 255)
BudSilver = rgb(177,179,179, max = 255)
BudBlack  = rgb(0,0,0, max = 255)
Brewries_By_State <- BrewriesFile %>% count(State)
names(Brewries_By_State)[2] = "BrewriesCount"  # Rename Column to ensure understanding.
ggplot(data = Brewries_By_State,
mapping = aes(x = State, y = BrewriesCount, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Brewries By State", x="States",y="Count",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
names(StatesFile)[1] = "State"  # Rename Column to be able to merge the two data sets.
st <- merge(StatesFile, Brewries_By_State, by=c("State")) # Merge Data Frames by State.
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = BudSilver, #toRGB("gray95"),
# showlakes = TRUE,
# lakecolor = toRGB("White"),
subunitcolor = BudRed, #toRGB("Red"),
countrycolor= toRGB("gray85"),
contrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(st, locationmode = 'USA-states') %>%
add_markers(x=st$Long, y=st$Lat, size = st$BrewriesCount, color = st$BrewriesCount, hoverinfo = "text",
text = paste0(
"State : ", st$State, "<br />",
"Population = ", format(st$Pop2019, big.mark = ","), "<br />",
"Brewries Count : ", st$BrewriesCount, "<br />")) %>%
layout(title = "Brewries By State", geo = g)
head(BeerFile)
head(BrewriesFile)
# Change the BrewriesFile "Brew_ID" column header to "Brewery_ID" to merge.
names(BeerFile)[1] <- "BeerName"
names(BeerFile)[5] <- "Brewery_ID"
names(BrewriesFile)[1] <- "Brewery_ID"
names(BrewriesFile)[2] <- "BreweryName"
BeersData <- merge(BrewriesFile,BeerFile, by=c("Brewery_ID"))
head(BeersData)
tail(BeersData)
BeersByState <- group_by(BeersData, State)
BeerStats <- summarise(BeersByState,
abv_mean = mean(ABV, na.rm = TRUE),
abv_sd = sd(ABV, na.rm = TRUE),
abv_med = median(ABV, na.rm = TRUE),
abv_min = min(ABV, na.rm = TRUE),
abv_max = max(ABV, na.rm = TRUE),
abv_iqr = IQR(ABV, na.rm = TRUE),
ibu_mean = mean(IBU, na.rm = TRUE),
ibu_sd = sd(IBU, na.rm = TRUE),
ibu_med = median(IBU, na.rm = TRUE),
ibu_min = min(IBU, na.rm = TRUE),
ibu_max = max(IBU, na.rm = TRUE),
ibu_iqr = IQR(IBU, na.rm = TRUE),
rec_cnt = n())
BeerStats
ggplot(BeerStats, mapping = aes(x = State, y = abv_mean, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Mean Alcohol By Volume by State", x="States",y="Mean ABV",fill="") +
scale_y_continuous(labels = scales::percent_format(accurac = 1)) +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
ggplot(BeerStats, mapping = aes(x = State, y = ibu_mean, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Mean IBU by State", x="States",y="Mean IBU",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
st_stats <- merge(st, BeerStats, by=c("State")) # Merge Data Frames by State.
g2 <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = BudSilver, #toRGB("gray95"),
showlakes = TRUE,
lakecolor = BudBlue, #toRGB("blue"),
subunitcolor = BudRed, #toRGB("Red"),
countrycolor= BudSilver, #toRGB("gray85"),
contrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(st_stats, locationmode = 'USA-states') %>%
# add_trace(z = st_stats, text = paste0("Mean ABV : ", sprintf("%.2f %%",100*st_stats$abv_mean)),
#           locations = st_stats$State, color = st_stats$abv_mean, colors = "Reds"
#           ) %>%
add_markers(x=st_stats$Long, y=st_stats$Lat, size = st_stats$ibu_mean,
color = st_stats$abv_mean, colors = "Reds", hoverinfo = "text",
text = paste0(
"State : ", st_stats$State, "<br />",
"Population = ", format(st_stats$Pop2019, big.mark = ","), "<br />",
"Brewries Count : ", st_stats$BrewriesCount, "<br />",
"Mean ABV : ", sprintf("%.2f %%",100*st_stats$abv_mean), "<br />",
"Mean IBU : ", round(st_stats$ibu_mean,2))) %>%
layout(title = "Mean Statistics by State (Marker Size = IBU, Color = ABV)",
geo = g2)
View(BeerSummy[order(-BeerSummy$abv_mean),])
View(BeerStats[order(-BeerStats$abv_mean),])
hist(BeersData$ABV)
hist(BeerStats$abv_mean)
ggplot(BeersData, mapping = aes(x = BeersData$ABV, y = BeersData$IBU)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = "Relationship between Alcohol Content & Bitterness", x = "Alcohol Content", y = "Bitterness") +
scale_x_continuous(labels = scales::percent_format(accurac = 1))
IPAs <- BeersData %>% filter(BeersData$Style == "India Pale Ale")
View(BeersData)
View(BeersData)
IPAs <- BeersData %>% filter(str_detect("[:alpha:]*IPA[:alpha:]*"))
IPAs <- BeersData %>% filter(str_detect(BeersData$Style, "[:alpha:]*IPA[:alpha:]*"))
View(IPAs)
View(IPAs)
ALEs <- BeersData %>% filter(str_detect(BeersData$Style, "([^IPA]|[:alpha:]*Ale[:alpha:]*)"))
View(ALEs)
View(ALEs)
ALEs <- BeersData %>% filter(str_detect(BeersData$Style, "([^IPA]&[:alpha:]*Ale[:alpha:]*)"))
ALEs <- BeersData %>% filter(str_detect(BeersData$Style, "[:alpha:]*Ale[:alpha:]*"))
View(ALEs)
View(ALEs)
ALEs_temp <- BeersData %>% filter(str_detect(BeersData$Style, "[:alpha:]*Ale[:alpha:]*"))
ALEs <- ALEs_temp %>% filter(str_detect(ALEs_temp$Style, "[^IPA]"))
IPAs$Type = "IPA"
ALEs$Type = "ALE"
IPAs$Type = as.factor("IPA")
View(IPAs)
ALEs$Type = as.factor("ALE")
AllAles = merge.data.frame(IPAs, ALEs, all = TRUE)
View(AllAles)
View(AllAles)
AllAles_Sorted <- order(AllAles, AllAles$Brewery_ID,AllAles$Beer_ID)
?order
dim(AllAles)
# Spit Data set into a training Data set and a testing dataset. @ 70/30
sp = 0.70  # Split percentage
TrainingRows = sample(1:dim(AllAles)[1],round(sp * dim(AllAles)[1])) # Calculate Training Rows
ales_train = AllAles[TrainingRows,]  # Split into 2 seperate data frames. Include Training Rows
ales_test = AllAles[-TrainingRows,]  # Exclude Training Rows (Testing Rows)
ales_test$TypeClalc=  knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
AllAlesClean <- filter(AllAles, !is.na(AllAles$ABV) | !is.na(AllAles$IBU))
AllAlesClean <- filter(AllAles, !is.na(AllAles$ABV) | !is.na(AllAles$IBU))
# Spit Data set into a training Data set and a testing dataset. @ 70/30
sp = 0.70  # Split percentage
TrainingRows = sample(1:dim(AllAlesClean)[1],round(sp * dim(AllAlesClean)[1])) # Calculate Training Rows
ales_train = AllAlesClean[TrainingRows,]  # Split into 2 seperate data frames. Include Training Rows
ales_test = AllAlesClean[-TrainingRows,]  # Exclude Training Rows (Testing Rows)
# KNN Test
ales_test$TypeClalc=  knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
View(AllAlesClean)
View(AllAlesClean)
AllAlesClean <- filter(AllAles, !is.na(AllAles$ABV) & !is.na(AllAles$IBU))
View(AllAlesClean)
View(AllAlesClean)
# Spit Data set into a training Data set and a testing dataset. @ 70/30
sp = 0.70  # Split percentage
TrainingRows = sample(1:dim(AllAlesClean)[1],round(sp * dim(AllAlesClean)[1])) # Calculate Training Rows
ales_train = AllAlesClean[TrainingRows,]  # Split into 2 seperate data frames. Include Training Rows
ales_test = AllAlesClean[-TrainingRows,]  # Exclude Training Rows (Testing Rows)
# KNN Test
ales_test$TypeClalc=  knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
classifications = knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
table(ales_test$Type, classifications)
cm = confusionMatrix(table(ales_test$Type, classifications))
AccValue = ((cm$table[1,1] + cm$table[2,2])) / ((cm$table[1,1] + cm$table[1,2]) +
(cm$table[2,1] + cm$table[2,2]))
MisClassValue = ((cm$table[1,2] + cm$table[2,1])) / ((cm$table[1,1] + cm$table[1,2]) +
(cm$table[2,1] + cm$table[2,2]))
SensitivityValue = cm$table[1,1] / (cm$table[1,1] + cm$table[2,1])
SpecifictityValue = cm$table[2,2] / (cm$table[1,2] + cm$table[2,2])
cm
AccValue
MisClassValue
SensitivityValue
SpecifictityValue
classifications = knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
table(ales_test$Type, classifications)
cm = confusionMatrix(table(ales_test$Type, classifications))
library(caret)
cm = confusionMatrix(table(ales_test$Type, classifications))
AccValue = ((cm$table[1,1] + cm$table[2,2])) / ((cm$table[1,1] + cm$table[1,2]) +
(cm$table[2,1] + cm$table[2,2]))
MisClassValue = ((cm$table[1,2] + cm$table[2,1])) / ((cm$table[1,1] + cm$table[1,2]) +
(cm$table[2,1] + cm$table[2,2]))
SensitivityValue = cm$table[1,1] / (cm$table[1,1] + cm$table[2,1])
SpecifictityValue = cm$table[2,2] / (cm$table[1,2] + cm$table[2,2])
cm
AccValue
MisClassValue
SensitivityValue
SpecifictityValue
View(ales_test)
View(ales_test)
st$BrewriesCount / st$Pop2019
st$Brewries_per_Mill = (st$BrewriesCount / (st$Pop2019/1000000))
st
top_n(st, 10, st$Brewries_per_Mill )
?top_n
top_n(st, -10, st$Brewries_per_Mill) # Gets the bottom 10 Brewries per Capa
ggplot(Top10, mapping = aes(x = State, y = Top10$Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Top 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
scale_y_continuous(labels = scales::percent_format(accurac = 1)) +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
Top10 <- top_n(st, 10, st$Brewries_per_Mill)  # Gets the Top 10 Brewries per Capa
Bottom10 <- top_n(st, -10, st$Brewries_per_Mill) # Gets the bottom 10 Brewries per Capa
ggplot(Top10, mapping = aes(x = State, y = Top10$Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Top 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
scale_y_continuous(labels = scales::percent_format(accurac = 1)) +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
ggplot(Top10, mapping = aes(x = State, y = Top10$Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Top 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
ggplot(Bottom10, mapping = aes(x = State, y = Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Top 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
ggplot(Bottom10, mapping = aes(x = State, y = Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Bottom 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
View(st)
View(st)
StatesFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/states_lat_long.csv",
strip.white = TRUE,
header = TRUE)
BeerFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/Beers.txt",
strip.white = TRUE,
header = TRUE)
BrewriesFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/Brewries.txt",
strip.white = TRUE,
header = TRUE)
StatesFile <- read.csv("/Users/marcc/Documents/R/SMUMastersTestProject/Unit 8 Breweries Project/states_lat_long.csv",
strip.white = TRUE,
header = TRUE)
View(StatesFile)
View(StatesFile)
BudRed = rgb(200,16,46, 200, max = 255)
BudWhite = rgb(255,255,255, max = 255)
BudBlue = rgb(19,41,75, max = 255)
BudSilver = rgb(177,179,179, max = 255)
BudBlack  = rgb(0,0,0, max = 255)
Brewries_By_State <- BrewriesFile %>% count(State)
names(Brewries_By_State)[2] = "BrewriesCount"  # Rename Column to ensure understanding.
ggplot(data = Brewries_By_State,
mapping = aes(x = State, y = BrewriesCount, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Brewries By State", x="States",y="Count",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
names(StatesFile)[1] = "State"  # Rename Column to be able to merge the two data sets.
st <- merge(StatesFile, Brewries_By_State, by=c("State")) # Merge Data Frames by State.
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = BudSilver, #toRGB("gray95"),
# showlakes = TRUE,
# lakecolor = toRGB("White"),
subunitcolor = BudRed, #toRGB("Red"),
countrycolor= toRGB("gray85"),
contrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(st, locationmode = 'USA-states') %>%
add_markers(x=st$Long, y=st$Lat, size = st$BrewriesCount, color = st$BrewriesCount, hoverinfo = "text",
text = paste0(
"State : ", st$StateName, "<br />",
"Population = ", format(st$Pop2019, big.mark = ","), "<br />",
"Brewries Count : ", st$BrewriesCount, "<br />")) %>%
layout(title = "Brewries By State", geo = g)
plot_geo(st, locationmode = 'USA-states') %>%
add_markers(x=st$Long, y=st$Lat, size = st$BrewriesCount, color = st$BrewriesCount, hoverinfo = "text",
text = paste0(
"State : ", st$StateName, "<br />",
"Population = ", format(st$Over21Pop, big.mark = ","), "<br />",
"Brewries Count : ", st$BrewriesCount, "<br />")) %>%
layout(title = "Brewries By State", geo = g)
head(BeerFile)
head(BrewriesFile)
# Change the BrewriesFile "Brew_ID" column header to "Brewery_ID" to merge.
names(BeerFile)[1] <- "BeerName"
names(BeerFile)[5] <- "Brewery_ID"
names(BrewriesFile)[1] <- "Brewery_ID"
names(BrewriesFile)[2] <- "BreweryName"
BeersData <- merge(BrewriesFile,BeerFile, by=c("Brewery_ID"))
head(BeersData)
tail(BeersData)
BeersByState <- group_by(BeersData, State)
BeerStats <- summarise(BeersByState,
abv_mean = mean(ABV, na.rm = TRUE),
abv_sd = sd(ABV, na.rm = TRUE),
abv_med = median(ABV, na.rm = TRUE),
abv_min = min(ABV, na.rm = TRUE),
abv_max = max(ABV, na.rm = TRUE),
abv_iqr = IQR(ABV, na.rm = TRUE),
ibu_mean = mean(IBU, na.rm = TRUE),
ibu_sd = sd(IBU, na.rm = TRUE),
ibu_med = median(IBU, na.rm = TRUE),
ibu_min = min(IBU, na.rm = TRUE),
ibu_max = max(IBU, na.rm = TRUE),
ibu_iqr = IQR(IBU, na.rm = TRUE),
rec_cnt = n())
BeerStats
ggplot(BeerStats, mapping = aes(x = State, y = abv_mean, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Mean Alcohol By Volume by State", x="States",y="Mean ABV",fill="") +
scale_y_continuous(labels = scales::percent_format(accurac = 1)) +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
ggplot(BeerStats, mapping = aes(x = State, y = ibu_mean, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Mean IBU by State", x="States",y="Mean IBU",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
st_stats <- merge(st, BeerStats, by=c("State")) # Merge Data Frames by State.
g2 <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = BudSilver, #toRGB("gray95"),
showlakes = TRUE,
lakecolor = BudBlue, #toRGB("blue"),
subunitcolor = BudRed, #toRGB("Red"),
countrycolor= BudSilver, #toRGB("gray85"),
contrywidth = 0.5,
subunitwidth = 0.5
)
plot_geo(st_stats, locationmode = 'USA-states') %>%
# add_trace(z = st_stats, text = paste0("Mean ABV : ", sprintf("%.2f %%",100*st_stats$abv_mean)),
#           locations = st_stats$State, color = st_stats$abv_mean, colors = "Reds"
#           ) %>%
add_markers(x=st_stats$Long, y=st_stats$Lat, size = st_stats$ibu_mean,
color = st_stats$abv_mean, colors = "Reds", hoverinfo = "text",
text = paste0(
"State : ", st_stats$State, "<br />",
"Population = ", format(st_stats$Pop2019, big.mark = ","), "<br />",
"Brewries Count : ", st_stats$BrewriesCount, "<br />",
"Mean ABV : ", sprintf("%.2f %%",100*st_stats$abv_mean), "<br />",
"Mean IBU : ", round(st_stats$ibu_mean,2))) %>%
layout(title = "Mean Statistics by State (Marker Size = IBU, Color = ABV)",
geo = g2)
View(BeerStats[order(-BeerStats$abv_mean),])
hist(BeersData$ABV)  # ABV seems right skewed.
hist(BeerStats$abv_mean)
ggplot(BeersData, mapping = aes(x = BeersData$ABV, y = BeersData$IBU)) +
geom_point() +
geom_smooth(method = lm) +
labs(title = "Relationship between Alcohol Content & Bitterness", x = "Alcohol Content", y = "Bitterness") +
scale_x_continuous(labels = scales::percent_format(accurac = 1))
# Carve out IPA's into a new data set.
IPAs <- BeersData %>% filter(str_detect(BeersData$Style, "[:alpha:]*IPA[:alpha:]*"))
# Carve out Ale's into a new data set.
ALEs_temp <- BeersData %>% filter(str_detect(BeersData$Style, "[:alpha:]*Ale[:alpha:]*"))
# Finally make sure all IPA's are removed from the Ale's data set.
ALEs <- ALEs_temp %>% filter(str_detect(ALEs_temp$Style, "[^IPA]"))
# Add a factor variable for determining variable.
IPAs$Type = as.factor("IPA")
ALEs$Type = as.factor("ALE")
# Combine back into a single Data set.
AllAles = merge.data.frame(IPAs, ALEs, all = TRUE)
# Remove all rows with blanks for IBU or ABV.
AllAlesClean <- filter(AllAles, !is.na(AllAles$ABV) & !is.na(AllAles$IBU))
# Spit Data set into a training Data set and a testing dataset. @ 70/30
sp = 0.70  # Split percentage
TrainingRows = sample(1:dim(AllAlesClean)[1],round(sp * dim(AllAlesClean)[1])) # Calculate Training Rows
ales_train = AllAlesClean[TrainingRows,]  # Split into 2 seperate data frames. Include Training Rows
ales_test = AllAlesClean[-TrainingRows,]  # Exclude Training Rows (Testing Rows)
# KNN Test
ales_test$TypeClalc =  knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
# classifications
classifications = knn(ales_train[,c(7,8)], ales_test[,c(7,8)],
ales_train$Type, k=5, prob = TRUE)
table(ales_test$Type, classifications)
cm = confusionMatrix(table(ales_test$Type, classifications))
AccValue = ((cm$table[1,1] + cm$table[2,2])) / ((cm$table[1,1] + cm$table[1,2]) +
(cm$table[2,1] + cm$table[2,2]))
MisClassValue = ((cm$table[1,2] + cm$table[2,1])) / ((cm$table[1,1] + cm$table[1,2]) +
(cm$table[2,1] + cm$table[2,2]))
SensitivityValue = cm$table[1,1] / (cm$table[1,1] + cm$table[2,1])
SpecifictityValue = cm$table[2,2] / (cm$table[1,2] + cm$table[2,2])
cm
AccValue
MisClassValue
SensitivityValue
SpecifictityValue
st$Brewries_per_Mill = (st$BrewriesCount / (st$Pop2019/1000000))
Top10 <- top_n(st, 10, st$Brewries_per_Mill)  # Gets the Top 10 Brewries per Capa
Bottom10 <- top_n(st, -10, st$Brewries_per_Mill) # Gets the bottom 10 Brewries per Capa
ggplot(Top10, mapping = aes(x = State, y = Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Top 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
st$Brewries_per_Mill = (st$BrewriesCount / (st$Over21Pop/1000000))
Top10 <- top_n(st, 10, st$Brewries_per_Mill)  # Gets the Top 10 Brewries per Capa
Bottom10 <- top_n(st, -10, st$Brewries_per_Mill) # Gets the bottom 10 Brewries per Capa
ggplot(Top10, mapping = aes(x = State, y = Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Top 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
ggplot(Bottom10, mapping = aes(x = State, y = Brewries_per_Mill, fill = BudRed)) +
geom_bar(stat = "Identity", show.legend = FALSE, colour = BudSilver) +
labs(title="Bottom 10 Brewries Per 1 Mill Capa", x="States",y="Brewries Per Million Capa",fill="") +
theme(panel.background = element_rect(fill = BudWhite,
colour = BudBlue,
size = 0.5, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.25, linetype = "solid",
colour = BudBlue),
panel.grid.major.x = element_blank())
